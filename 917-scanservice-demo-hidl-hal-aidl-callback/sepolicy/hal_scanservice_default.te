type hal_scanservice_default, domain;
hal_server_domain(hal_scanservice_default, hal_scanservice)

type hal_scanservice_default_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(hal_scanservice_default)

#allow hal_scanservice_default camera_config_prop:file read;
allow hal_scanservice_default fwk_camera_hwservice:hwservice_manager find;
allow hal_scanservice_default vendor_camera_prop:file { read open map getattr };
allow hal_scanservice_default video_device:chr_file { read write open ioctl };

#allow hal_scanservice_default boot_status_prop:file { read map getattr open };
allow hal_scanservice_default servicemanager:binder call;
allow hal_scanservice_default hal_customizescan_service:service_manager find;
allow hal_scanservice_default hal_customizescanservice_default:binder { call transfer };
allow hal_scanservice_default hal_customizescanservice_default:fd use;

allow hal_scanservice_default hal_graphics_allocator_default:binder call;
allow hal_scanservice_default hal_graphics_allocator_default:fd use;
#allow hal_scanservice_default hal_graphics_allocator_hwservice:hwservice_manager find;
#allow hal_scanservice_default hal_graphics_mapper_hwservice:hwservice_manager find;
#allow hal_scanservice_default hidl_token_hwservice:hwservice_manager find;
allow hal_scanservice_default ion_device:chr_file read;
allow hal_scanservice_default hal_scanservice_default:qipcrtr_socket create;
allow hal_scanservice_default scanner_device:chr_file { read write ioctl open };
allow hal_scanservice_default self:qipcrtr_socket { write read getattr setopt };
