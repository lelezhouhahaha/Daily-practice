type hal_customizescanservice_default, domain;
hal_server_domain(hal_customizescanservice_default, hal_customizescanservice)

type hal_customizescanservice_default_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(hal_customizescanservice_default)

#allow hal_customizescanservice_default camera_config_prop:file read;
allow hal_customizescanservice_default fwk_camera_hwservice:hwservice_manager find;
allow hal_customizescanservice_default vendor_camera_prop:file { read open map getattr };
allow hal_customizescanservice_default video_device:chr_file { read write open ioctl };

allow hal_customizescanservice_default hal_customizescan_service:service_manager add;
#allow hal_customizescanservice_default self:capability dac_override;
allow hal_customizescanservice_default servicemanager:binder { transfer call };
allow hal_customizescanservice_default hal_scanservice_default:binder { call };

allow hal_customizescanservice_default block_device:dir search;

allow hal_customizescanservice_default hal_graphics_allocator_default:binder call;
allow hal_customizescanservice_default hal_graphics_allocator_default:fd use;
#allow hal_customizescanservice_default hal_graphics_allocator_hwservice:hwservice_manager find;
#allow hal_customizescanservice_default hal_graphics_mapper_hwservice:hwservice_manager find;
#allow hal_customizescanservice_default hidl_token_hwservice:hwservice_manager find;
allow hal_customizescanservice_default ion_device:chr_file read;
allow hal_customizescanservice_default hal_customizescanservice_default:qipcrtr_socket create;
allow hal_customizescanservice_default scanner_device:chr_file { read write ioctl open };
allow hal_customizescanservice_default self:qipcrtr_socket { write read getattr setopt };
